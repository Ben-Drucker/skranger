# we do this because poetry doesn't name/tag the wheel properly
# https://github.com/pypa/cibuildwheel/issues/1349
name: build wheels silicon

on:
  push:
    branches:
      - master
      - buildm1
  release:
    types:
      - published
  pull_request:
    branches:
      - master

jobs:
  build_wheels:
    name: build ${{ matrix.py }} wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-12]
        py: ["cp38-*", "cp39-*", "cp310-*", "cp311-*"]

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.12.3
      env:
        CIBW_BUILD: ${{ matrix.py }}
        CIBW_BUILD_FRONTEND: "build"
        CIBW_ARCHS_MACOS: arm64
        CIBW_ENVIRONMENT_MACOS: SYSTEM_VERSION_COMPAT=0  # https://github.com/pypa/cibuildwheel/issues/1410#issuecomment-1425627829
        CIBW_BEFORE_ALL: python -m pip install -U pip && python buildpre.py
        CIBW_BEFORE_TEST: python -m pip install -U pip
        CIBW_TEST_COMMAND: python -c "import skranger; print(skranger.__version__); from skranger import ranger"
        # can build but not test m1 builds
        CIBW_TEST_SKIP: "*-macosx_arm64 *_universal2:arm64"
        CIBW_REPAIR_WHEEL_COMMAND_MACOS: "delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}; pip install wheel==0.40; wheel tags --platform-tag macosx_12_0_arm64 ${echo ./wheelhouse/*-macosx_12_0_x86_64.whl}; rm ./wheelhouse/*-macosx_12_0_x86_64.whl"
        CIBW_BUILD_VERBOSITY: 3

    - name: Show wheelhouse
      run: |
        ls wheelhouse

    - name: Set up python
      id: setup-python
      if: github.event_name == 'release' && github.event.action == 'published'
      uses: actions/setup-python@v3
      with:
        python-version: 3.9

    - name: Publish on tag
      if: github.event_name == 'release' && github.event.action == 'published'
      env:
        TWINE_USERNAME: crflynn
        TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      run: |
        pip install --upgrade twine
        twine upload wheelhouse/*.whl
